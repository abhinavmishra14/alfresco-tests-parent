package it.vige.nam.stub;

import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by Apache CXF 3.1.11 2017-04-20T12:22:20.231+02:00
 * Generated source version: 3.1.11
 * 
 */
@WebServiceClient(name = "SignIntegrationBigService", wsdlLocation = "classpath:wsdl/SignIntegrationBigServices.wsdl", targetNamespace = "http://service.ws.nam/")
public class SignIntegrationBigService extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName("http://service.ws.nam/", "SignIntegrationBigService");
	public final static QName SignIntegrationBigPort = new QName("http://service.ws.nam/", "SignIntegrationBigPort");
	static {
		URL url = null;
		url = SignIntegrationBigService.class.getClassLoader().getResource("wsdl/SignIntegrationBigServices.wsdl");
		if (url == null) {
			java.util.logging.Logger.getLogger(SignIntegrationBigService.class.getName()).log(
					java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
					"classpath:wsdl/SignIntegrationBigServices.wsdl");
		}
		WSDL_LOCATION = url;
	}

	public SignIntegrationBigService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public SignIntegrationBigService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public SignIntegrationBigService() {
		super(WSDL_LOCATION, SERVICE);
	}

	public SignIntegrationBigService(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	public SignIntegrationBigService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	public SignIntegrationBigService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 *
	 * @return returns SignIntegrationBig
	 */
	@WebEndpoint(name = "SignIntegrationBigPort")
	public SignIntegrationBig getSignIntegrationBigPort() {
		return super.getPort(SignIntegrationBigPort, SignIntegrationBig.class);
	}

	/**
	 * 
	 * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *                 on the proxy. Supported features not in the
	 *                 <code>features</code> parameter will have their default
	 *                 values.
	 * @return returns SignIntegrationBig
	 */
	@WebEndpoint(name = "SignIntegrationBigPort")
	public SignIntegrationBig getSignIntegrationBigPort(WebServiceFeature... features) {
		return super.getPort(SignIntegrationBigPort, SignIntegrationBig.class, features);
	}

}
